<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描  @Controller-->
    <context:component-scan base-package="cn.anytec.controller"/>
    <!--&lt;!&ndash; 开启注解 &ndash;&gt;-->

    <!-- 注解适配器 -->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />-->
    <!-- 注解映射器 -->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"></bean>-->

    <!--使用下面的mvc:annotation-driven可以代替上面的注解映射器和注解适配器-->
    <mvc:annotation-driven/>
    <!--=============================添加Camera引导类===============================-->
    <bean class="cn.anytec.quadrant.CameraDataBootstrap" init-method="init"></bean>
    <!--=====================================================================-->
    <!--=====================加载静态资源======================-->
    <mvc:resources mapping="/static/**"  location="static/"/>
    <!--=====================================================-->
    <!--===========================处理文件上传=========================-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="15000000"/>
    </bean>
    <!--==============================================================-->

    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
        <!--<property name="exposeRequestAttributes" value="true" />-->
        <!--<property name="exposeSessionAttributes" value="true" />-->
        <!--<property name="viewClass">-->
            <!--<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>-->
        <!--</property>-->
        <!--<property name="cache"><value>true</value></property>-->
        <!--&lt;!&ndash;这里需要注意一下，我注释了下面这样一行代码，这行代码的意思就是指引freemarker需要解析的文件的位置。注释掉原因是因为-->
         <!--applicationContext.xml里有这样一行代码：<property name="templateLoaderPath" value="/WEB-INF/views/" /> 已经指定了视图位置。如果我们这里依然保留下方代码，页面回报406的找不到的错误 &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="prefix"><value>/WEB-INF/views/</value></property>&ndash;&gt;-->
        <!--<property name="suffix"><value>.html</value></property>-->
        <!--<property name="contentType">-->
            <!--<value>text/html; charset=UTF-8</value>-->
        <!--</property>-->
        <!--<property name="order" value="0" />-->
    <!--</bean>-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1" />
    </bean>

    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash; 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller &ndash;&gt;-->
            <!--<mvc:mapping path="/**" />-->
            <!--&lt;!&ndash;<mvc:mapping path="/user/**" />&ndash;&gt;-->
            <!--&lt;!&ndash;<mvc:mapping path="/test/**" />&ndash;&gt;-->
            <!--<bean class="com.ntech.interceptor.MyInterceptor"></bean>-->
        <!--</mvc:interceptor>-->
        <!--&lt;!&ndash; 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 &ndash;&gt;-->
    <!--</mvc:interceptors>-->




</beans>